/*
 * This file is generated by jOOQ.
 */
package io.tntra.springBootcamp;


import io.tntra.springBootcamp.tables.Author;
import io.tntra.springBootcamp.tables.records.AuthorRecord;

import javax.annotation.processing.Generated;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * flyway_test.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.7",
        "catalog version:_20220802",
        "schema version:flyway_test_20220802"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> PK_T_AUTHOR = Internal.createUniqueKey(Author.AUTHOR, DSL.name("pk_t_author"), new TableField[] { Author.AUTHOR.ID }, true);
}
