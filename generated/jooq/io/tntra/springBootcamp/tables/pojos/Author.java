/*
 * This file is generated by jOOQ.
 */
package io.tntra.springBootcamp.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

import java.io.Serializable;
import java.time.LocalDate;

import javax.annotation.processing.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.7",
        "catalog version:_20220802",
        "schema version:flyway_test_20220802"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "author",
    schema = "flyway_test"
)
public class Author implements Serializable {

    private static final long serialVersionUID = 1L;

    private Integer   id;
    private String    firstName;
    private String    lastName;
    private LocalDate dateOfBirth;
    private Integer   yearOfBirth;
    private String    address;

    public Author() {}

    public Author(Author value) {
        this.id = value.id;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.dateOfBirth = value.dateOfBirth;
        this.yearOfBirth = value.yearOfBirth;
        this.address = value.address;
    }

    public Author(
        Integer   id,
        String    firstName,
        String    lastName,
        LocalDate dateOfBirth,
        Integer   yearOfBirth,
        String    address
    ) {
        this.id = id;
        this.firstName = firstName;
        this.lastName = lastName;
        this.dateOfBirth = dateOfBirth;
        this.yearOfBirth = yearOfBirth;
        this.address = address;
    }

    /**
     * Getter for <code>flyway_test.author.id</code>.
     */
    @Id
    @Column(name = "id", nullable = false, precision = 32)
    public Integer getId() {
        return this.id;
    }

    /**
     * Setter for <code>flyway_test.author.id</code>.
     */
    public Author setId(Integer id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>flyway_test.author.first_name</code>.
     */
    @Column(name = "first_name", length = 50)
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>flyway_test.author.first_name</code>.
     */
    public Author setFirstName(String firstName) {
        this.firstName = firstName;
        return this;
    }

    /**
     * Getter for <code>flyway_test.author.last_name</code>.
     */
    @Column(name = "last_name", nullable = false, length = 50)
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>flyway_test.author.last_name</code>.
     */
    public Author setLastName(String lastName) {
        this.lastName = lastName;
        return this;
    }

    /**
     * Getter for <code>flyway_test.author.date_of_birth</code>.
     */
    @Column(name = "date_of_birth")
    public LocalDate getDateOfBirth() {
        return this.dateOfBirth;
    }

    /**
     * Setter for <code>flyway_test.author.date_of_birth</code>.
     */
    public Author setDateOfBirth(LocalDate dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
        return this;
    }

    /**
     * Getter for <code>flyway_test.author.year_of_birth</code>.
     */
    @Column(name = "year_of_birth", precision = 32)
    public Integer getYearOfBirth() {
        return this.yearOfBirth;
    }

    /**
     * Setter for <code>flyway_test.author.year_of_birth</code>.
     */
    public Author setYearOfBirth(Integer yearOfBirth) {
        this.yearOfBirth = yearOfBirth;
        return this;
    }

    /**
     * Getter for <code>flyway_test.author.address</code>.
     */
    @Column(name = "address", length = 50)
    public String getAddress() {
        return this.address;
    }

    /**
     * Setter for <code>flyway_test.author.address</code>.
     */
    public Author setAddress(String address) {
        this.address = address;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Author other = (Author) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.dateOfBirth == null) {
            if (other.dateOfBirth != null)
                return false;
        }
        else if (!this.dateOfBirth.equals(other.dateOfBirth))
            return false;
        if (this.yearOfBirth == null) {
            if (other.yearOfBirth != null)
                return false;
        }
        else if (!this.yearOfBirth.equals(other.yearOfBirth))
            return false;
        if (this.address == null) {
            if (other.address != null)
                return false;
        }
        else if (!this.address.equals(other.address))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.dateOfBirth == null) ? 0 : this.dateOfBirth.hashCode());
        result = prime * result + ((this.yearOfBirth == null) ? 0 : this.yearOfBirth.hashCode());
        result = prime * result + ((this.address == null) ? 0 : this.address.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Author (");

        sb.append(id);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(dateOfBirth);
        sb.append(", ").append(yearOfBirth);
        sb.append(", ").append(address);

        sb.append(")");
        return sb.toString();
    }
}
